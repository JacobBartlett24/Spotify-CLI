const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline,
  useFocus
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  useEffect(async () => {
    const playlists = await axios.get('/me/playlists');
    setPlaylistData(playlists.data.items.map(playlist => /*#__PURE__*/React.createElement(Playlist, {
      key: playlist.id,
      playlistName: playlist.name
    })));
  }, []);
  useEffect(() => {
    playlistData.forEach(element => {
      console.log(element);
    });
  }, [playlistData]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), /*#__PURE__*/React.createElement(Newline, null), playlistData);
};
const Playlist = props => {
  const {
    isFocused
  } = useFocus();
  return /*#__PURE__*/React.createElement(Box, {
    key: props.key
  }, /*#__PURE__*/React.createElement(Text, {
    color: isFocused ? 'green' : 'white',
    bold: true
  }, props.playlistName), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwidXNlRm9jdXMiLCJCaWdUZXh0IiwiYXhpb3MiLCJQbGF5bGlzdFBhZ2UiLCJwcm9wcyIsInBsYXlsaXN0RGF0YSIsInNldFBsYXlsaXN0RGF0YSIsInBsYXlsaXN0cyIsImdldCIsImRhdGEiLCJpdGVtcyIsIm1hcCIsInBsYXlsaXN0IiwiaWQiLCJuYW1lIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiUGxheWxpc3QiLCJpc0ZvY3VzZWQiLCJrZXkiLCJwbGF5bGlzdE5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUGxheWxpc3RQYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG5jb25zdCB7IEJveCwgVGV4dCwgTmV3bGluZSwgdXNlRm9jdXMgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoJ2luay1iaWctdGV4dCcpO1xuY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpO1xuXG5cbmNvbnN0IFBsYXlsaXN0UGFnZSA9IChwcm9wcykgPT57XG5cbiAgICBjb25zdCBbcGxheWxpc3REYXRhLHNldFBsYXlsaXN0RGF0YV0gPSB1c2VTdGF0ZShbXSk7XG5cbiAgICB1c2VFZmZlY3QoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBwbGF5bGlzdHMgPSBhd2FpdCBheGlvcy5nZXQoJy9tZS9wbGF5bGlzdHMnKVxuXG4gICAgICAgIHNldFBsYXlsaXN0RGF0YShwbGF5bGlzdHMuZGF0YS5pdGVtcy5tYXAocGxheWxpc3QgPT5cbiAgICAgICAgICAgIDxQbGF5bGlzdCBrZXk9e3BsYXlsaXN0LmlkfSBwbGF5bGlzdE5hbWU9e3BsYXlsaXN0Lm5hbWV9Lz5cbiAgICAgICAgKSk7XG4gICAgfSxbXSlcbiAgICBcbiAgICB1c2VFZmZlY3QoKCkgPT57XG4gICAgICAgIHBsYXlsaXN0RGF0YS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZWxlbWVudClcbiAgICAgICAgfSk7XG4gICAgfSwgW3BsYXlsaXN0RGF0YV0pXG5cbiAgICByZXR1cm4oXG4gICAgICAgIDxCb3ggZmxleERpcmVjdGlvbj0nY29sdW1uJz5cbiAgICAgICAgICAgIDxUZXh0PlBsYXlsaXN0IFBhZ2U8L1RleHQ+XG4gICAgICAgICAgICA8TmV3bGluZSAvPlxuICAgICAgICAgICAge3BsYXlsaXN0RGF0YX1cbiAgICAgICAgPC9Cb3g+XG4gICAgKVxufVxuXG5jb25zdCBQbGF5bGlzdCA9IChwcm9wcykgPT57XG4gICAgY29uc3Qge2lzRm9jdXNlZH0gPSB1c2VGb2N1cygpO1xuXG4gICAgcmV0dXJuKFxuICAgICAgICA8Qm94IGtleT17cHJvcHMua2V5fT5cbiAgICAgICAgICAgIDxUZXh0IGNvbG9yPXtpc0ZvY3VzZWQgPyAnZ3JlZW4nIDogJ3doaXRlJ30gYm9sZD57cHJvcHMucGxheWxpc3ROYW1lfTwvVGV4dD5cbiAgICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5bGlzdFBhZ2U7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQyxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsSUFBSTtFQUFFQyxPQUFPO0VBQUVDO0FBQVMsQ0FBQyxHQUFHTixPQUFPLENBQUMsS0FBSyxDQUFDO0FBQ3ZELE1BQU1PLE9BQU8sR0FBR1AsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN2QyxNQUFNUSxLQUFLLEdBQUdSLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFHOUIsTUFBTVMsWUFBWSxHQUFJQyxLQUFLLElBQUk7RUFFM0IsTUFBTSxDQUFDQyxZQUFZLEVBQUNDLGVBQWUsQ0FBQyxHQUFHWCxRQUFRLENBQUMsRUFBRSxDQUFDO0VBRW5EQyxTQUFTLENBQUMsWUFBWTtJQUNsQixNQUFNVyxTQUFTLEdBQUcsTUFBTUwsS0FBSyxDQUFDTSxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRWxERixlQUFlLENBQUNDLFNBQVMsQ0FBQ0UsSUFBSSxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxpQkFDN0Msb0JBQUMsUUFBUTtNQUFDLEdBQUcsRUFBRUEsUUFBUSxDQUFDQyxFQUFHO01BQUMsWUFBWSxFQUFFRCxRQUFRLENBQUNFO0lBQUssRUFBRSxDQUM3RCxDQUFDO0VBQ04sQ0FBQyxFQUFDLEVBQUUsQ0FBQztFQUVMbEIsU0FBUyxDQUFDLE1BQUs7SUFDWFMsWUFBWSxDQUFDVSxPQUFPLENBQUNDLE9BQU8sSUFBSTtNQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE9BQU8sQ0FBQztJQUN4QixDQUFDLENBQUM7RUFDTixDQUFDLEVBQUUsQ0FBQ1gsWUFBWSxDQUFDLENBQUM7RUFFbEIsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixlQUMxQixvQkFBQyxPQUFPLE9BQUcsRUFDVkEsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVELE1BQU1jLFFBQVEsR0FBSWYsS0FBSyxJQUFJO0VBQ3ZCLE1BQU07SUFBQ2dCO0VBQVMsQ0FBQyxHQUFHcEIsUUFBUSxFQUFFO0VBRTlCLG9CQUNJLG9CQUFDLEdBQUc7SUFBQyxHQUFHLEVBQUVJLEtBQUssQ0FBQ2lCO0VBQUksZ0JBQ2hCLG9CQUFDLElBQUk7SUFBQyxLQUFLLEVBQUVELFNBQVMsR0FBRyxPQUFPLEdBQUcsT0FBUTtJQUFDLElBQUk7RUFBQSxHQUFFaEIsS0FBSyxDQUFDa0IsWUFBWSxDQUFRLGVBQzVFLG9CQUFDLE9BQU8sT0FBRyxDQUNUO0FBRWQsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR3JCLFlBQVkifQ==
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  render,
  useApp,
  useInput,
  Text
} = require("ink");
const API = require('../SpotifyAPI/API');
const fs = require('fs');
const data = require('../SpotifyAPI/data.json');
const importJsx = require('import-jsx');
const MainBox = importJsx('./MainBox');
const APIui = () => {
  const [result, setResult] = useState('');
  const [watchResultCounter, setWatchResultCounter] = useState(0);
  const {
    exit
  } = useApp();
  useEffect(() => {
    render( /*#__PURE__*/React.createElement(MainBox, {
      title: "Spotify"
    }));
  }, [result]);
  fs.watch('./SpotifyAPI/data.json', () => {
    if (watchResultCounter != 0) {
      setResult(fs.readFileSync('./SpotifyAPI/data.json').toString());
      console.log(result);
    } else setWatchResultCounter(watchResultCounter + 1);
  });
  useInput(async (input, key) => {
    if (input === 'q') {
      exit();
    } else if (input === 'a') {
      API();
    }
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, "Hit \"a\" to connect to UI"));
};
module.exports = APIui;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInJlbmRlciIsInVzZUFwcCIsInVzZUlucHV0IiwiVGV4dCIsIkFQSSIsImZzIiwiZGF0YSIsImltcG9ydEpzeCIsIk1haW5Cb3giLCJBUEl1aSIsInJlc3VsdCIsInNldFJlc3VsdCIsIndhdGNoUmVzdWx0Q291bnRlciIsInNldFdhdGNoUmVzdWx0Q291bnRlciIsImV4aXQiLCJ3YXRjaCIsInJlYWRGaWxlU3luYyIsInRvU3RyaW5nIiwiY29uc29sZSIsImxvZyIsImlucHV0Iiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkFQSXVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG5jb25zdCB7IHJlbmRlciwgdXNlQXBwLCB1c2VJbnB1dCwgVGV4dCB9ID0gcmVxdWlyZShcImlua1wiKTtcbmNvbnN0IEFQSSA9IHJlcXVpcmUoJy4uL1Nwb3RpZnlBUEkvQVBJJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgZGF0YSA9IHJlcXVpcmUoJy4uL1Nwb3RpZnlBUEkvZGF0YS5qc29uJyk7XG5jb25zdCBpbXBvcnRKc3ggPSByZXF1aXJlKCdpbXBvcnQtanN4Jyk7XG5jb25zdCBNYWluQm94ID0gaW1wb3J0SnN4KCcuL01haW5Cb3gnKVxuXG5jb25zdCBBUEl1aSA9ICgpID0+e1xuICBcbiAgY29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlKCcnKVxuICBjb25zdCBbd2F0Y2hSZXN1bHRDb3VudGVyLCBzZXRXYXRjaFJlc3VsdENvdW50ZXJdID0gdXNlU3RhdGUoMClcbiAgY29uc3Qge2V4aXR9ID0gdXNlQXBwKCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+e1xuICAgIHJlbmRlcig8TWFpbkJveCB0aXRsZT0nU3BvdGlmeScvPilcbiAgfSxbcmVzdWx0XSlcblxuICBmcy53YXRjaCgnLi9TcG90aWZ5QVBJL2RhdGEuanNvbicsICgpID0+IHtcbiAgICBpZih3YXRjaFJlc3VsdENvdW50ZXIgIT0gMCl7XG4gICAgICBzZXRSZXN1bHQoZnMucmVhZEZpbGVTeW5jKCcuL1Nwb3RpZnlBUEkvZGF0YS5qc29uJykudG9TdHJpbmcoKSk7XG4gICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXG4gICAgfWVsc2Ugc2V0V2F0Y2hSZXN1bHRDb3VudGVyKHdhdGNoUmVzdWx0Q291bnRlciArIDEpXG4gIH0pXG5cbiAgdXNlSW5wdXQoYXN5bmMgKGlucHV0LCBrZXkpID0+IHtcblx0ICBpZiAoaW5wdXQgPT09ICdxJykge1xuXHRcdCAgZXhpdCgpXG4gICAgfWVsc2UgaWYoaW5wdXQgPT09ICdhJyl7XG4gICAgICBBUEkoKVxuICAgIH1cblx0fSk7XG5cbiAgcmV0dXJuKFxuICAgIDw+XG4gICAgICA8VGV4dD5IaXQgXCJhXCIgdG8gY29ubmVjdCB0byBVSTwvVGV4dD5cbiAgICA8Lz5cbiAgKVxuICBcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBUEl1aTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVDLFFBQVE7RUFBRUM7QUFBVSxDQUFDLEdBQUdILEtBQUs7QUFDckMsTUFBTTtFQUFFSSxNQUFNO0VBQUVDLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFLLENBQUMsR0FBR04sT0FBTyxDQUFDLEtBQUssQ0FBQztBQUN6RCxNQUFNTyxHQUFHLEdBQUdQLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUN4QyxNQUFNUSxFQUFFLEdBQUdSLE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDeEIsTUFBTVMsSUFBSSxHQUFHVCxPQUFPLENBQUMseUJBQXlCLENBQUM7QUFDL0MsTUFBTVUsU0FBUyxHQUFHVixPQUFPLENBQUMsWUFBWSxDQUFDO0FBQ3ZDLE1BQU1XLE9BQU8sR0FBR0QsU0FBUyxDQUFDLFdBQVcsQ0FBQztBQUV0QyxNQUFNRSxLQUFLLEdBQUcsTUFBSztFQUVqQixNQUFNLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxDQUFDLEdBQUdiLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDeEMsTUFBTSxDQUFDYyxrQkFBa0IsRUFBRUMscUJBQXFCLENBQUMsR0FBR2YsUUFBUSxDQUFDLENBQUMsQ0FBQztFQUMvRCxNQUFNO0lBQUNnQjtFQUFJLENBQUMsR0FBR2IsTUFBTSxFQUFFO0VBRXZCRixTQUFTLENBQUMsTUFBSztJQUNiQyxNQUFNLGVBQUMsb0JBQUMsT0FBTztNQUFDLEtBQUssRUFBQztJQUFTLEVBQUUsQ0FBQztFQUNwQyxDQUFDLEVBQUMsQ0FBQ1UsTUFBTSxDQUFDLENBQUM7RUFFWEwsRUFBRSxDQUFDVSxLQUFLLENBQUMsd0JBQXdCLEVBQUUsTUFBTTtJQUN2QyxJQUFHSCxrQkFBa0IsSUFBSSxDQUFDLEVBQUM7TUFDekJELFNBQVMsQ0FBQ04sRUFBRSxDQUFDVyxZQUFZLENBQUMsd0JBQXdCLENBQUMsQ0FBQ0MsUUFBUSxFQUFFLENBQUM7TUFDL0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDVCxNQUFNLENBQUM7SUFDckIsQ0FBQyxNQUFLRyxxQkFBcUIsQ0FBQ0Qsa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0VBQ3JELENBQUMsQ0FBQztFQUVGVixRQUFRLENBQUMsT0FBT2tCLEtBQUssRUFBRUMsR0FBRyxLQUFLO0lBQzlCLElBQUlELEtBQUssS0FBSyxHQUFHLEVBQUU7TUFDbEJOLElBQUksRUFBRTtJQUNOLENBQUMsTUFBSyxJQUFHTSxLQUFLLEtBQUssR0FBRyxFQUFDO01BQ3JCaEIsR0FBRyxFQUFFO0lBQ1A7RUFDSCxDQUFDLENBQUM7RUFFRCxvQkFDRSx1REFDRSxvQkFBQyxJQUFJLHFDQUFnQyxDQUNwQztBQUdQLENBQUM7QUFFRGtCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZCxLQUFLIn0=
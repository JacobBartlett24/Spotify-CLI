const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline,
  useFocus
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  useEffect(async () => {
    const playlists = await axios.get('/me/playlists');
    setPlaylistData(playlists.data.items.map((playlist, i) => /*#__PURE__*/React.createElement(Playlist, {
      key: playlist.id,
      playlistName: playlist.name
    })));
  }, []);
  useEffect(() => {
    playlistData.forEach(element => {
      console.log(element);
    });
  }, [playlistData]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), /*#__PURE__*/React.createElement(Newline, null), playlistData);
};
const Playlist = props => {
  const {
    isFocused
  } = useFocus();
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, {
    color: isFocused ? 'green' : 'white',
    bold: true
  }, props.playlistName), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwidXNlRm9jdXMiLCJCaWdUZXh0IiwiYXhpb3MiLCJQbGF5bGlzdFBhZ2UiLCJwcm9wcyIsInBsYXlsaXN0RGF0YSIsInNldFBsYXlsaXN0RGF0YSIsInBsYXlsaXN0cyIsImdldCIsImRhdGEiLCJpdGVtcyIsIm1hcCIsInBsYXlsaXN0IiwiaSIsImlkIiwibmFtZSIsImZvckVhY2giLCJlbGVtZW50IiwiY29uc29sZSIsImxvZyIsIlBsYXlsaXN0IiwiaXNGb2N1c2VkIiwicGxheWxpc3ROYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBsYXlsaXN0UGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIFRleHQsIE5ld2xpbmUsIHVzZUZvY3VzIH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKCdpbmstYmlnLXRleHQnKTtcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxuY29uc3QgUGxheWxpc3RQYWdlID0gKHByb3BzKSA9PntcblxuICAgIGNvbnN0IFtwbGF5bGlzdERhdGEsc2V0UGxheWxpc3REYXRhXSA9IHVzZVN0YXRlKFtdKTtcblxuICAgIHVzZUVmZmVjdChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBsYXlsaXN0cyA9IGF3YWl0IGF4aW9zLmdldCgnL21lL3BsYXlsaXN0cycpXG5cbiAgICAgICAgc2V0UGxheWxpc3REYXRhKHBsYXlsaXN0cy5kYXRhLml0ZW1zLm1hcCgocGxheWxpc3QsIGkpID0+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxQbGF5bGlzdCBrZXk9e3BsYXlsaXN0LmlkfSBwbGF5bGlzdE5hbWU9e3BsYXlsaXN0Lm5hbWV9Lz5cbiAgICAgICAgKSk7XG4gICAgfSxbXSlcbiAgICBcbiAgICB1c2VFZmZlY3QoKCkgPT57XG4gICAgICAgIHBsYXlsaXN0RGF0YS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZWxlbWVudClcbiAgICAgICAgfSk7XG4gICAgfSwgW3BsYXlsaXN0RGF0YV0pXG5cbiAgICByZXR1cm4oXG4gICAgICAgIDxCb3ggZmxleERpcmVjdGlvbj0nY29sdW1uJz5cbiAgICAgICAgICAgIDxUZXh0PlBsYXlsaXN0IFBhZ2U8L1RleHQ+XG4gICAgICAgICAgICA8TmV3bGluZSAvPlxuICAgICAgICAgICAge3BsYXlsaXN0RGF0YX1cbiAgICAgICAgPC9Cb3g+XG4gICAgKVxufVxuXG5jb25zdCBQbGF5bGlzdCA9IChwcm9wcykgPT57XG4gICAgY29uc3Qge2lzRm9jdXNlZH0gPSB1c2VGb2N1cygpO1xuXG4gICAgcmV0dXJuKFxuICAgICAgICA8Qm94PlxuICAgICAgICAgICAgPFRleHQgY29sb3I9e2lzRm9jdXNlZCA/ICdncmVlbicgOiAnd2hpdGUnfSBib2xkPntwcm9wcy5wbGF5bGlzdE5hbWV9PC9UZXh0PlxuICAgICAgICAgICAgPE5ld2xpbmUgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXlsaXN0UGFnZTtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDLE1BQU07RUFBRUksR0FBRztFQUFFQyxJQUFJO0VBQUVDLE9BQU87RUFBRUM7QUFBUyxDQUFDLEdBQUdOLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDdkQsTUFBTU8sT0FBTyxHQUFHUCxPQUFPLENBQUMsY0FBYyxDQUFDO0FBQ3ZDLE1BQU1RLEtBQUssR0FBR1IsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUU5QixNQUFNUyxZQUFZLEdBQUlDLEtBQUssSUFBSTtFQUUzQixNQUFNLENBQUNDLFlBQVksRUFBQ0MsZUFBZSxDQUFDLEdBQUdYLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFFbkRDLFNBQVMsQ0FBQyxZQUFZO0lBQ2xCLE1BQU1XLFNBQVMsR0FBRyxNQUFNTCxLQUFLLENBQUNNLEdBQUcsQ0FBQyxlQUFlLENBQUM7SUFFbERGLGVBQWUsQ0FBQ0MsU0FBUyxDQUFDRSxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLFFBQVEsRUFBRUMsQ0FBQyxrQkFFakQsb0JBQUMsUUFBUTtNQUFDLEdBQUcsRUFBRUQsUUFBUSxDQUFDRSxFQUFHO01BQUMsWUFBWSxFQUFFRixRQUFRLENBQUNHO0lBQUssRUFBRSxDQUM3RCxDQUFDO0VBQ04sQ0FBQyxFQUFDLEVBQUUsQ0FBQztFQUVMbkIsU0FBUyxDQUFDLE1BQUs7SUFDWFMsWUFBWSxDQUFDVyxPQUFPLENBQUNDLE9BQU8sSUFBSTtNQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE9BQU8sQ0FBQztJQUN4QixDQUFDLENBQUM7RUFDTixDQUFDLEVBQUUsQ0FBQ1osWUFBWSxDQUFDLENBQUM7RUFFbEIsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixlQUMxQixvQkFBQyxPQUFPLE9BQUcsRUFDVkEsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVELE1BQU1lLFFBQVEsR0FBSWhCLEtBQUssSUFBSTtFQUN2QixNQUFNO0lBQUNpQjtFQUFTLENBQUMsR0FBR3JCLFFBQVEsRUFBRTtFQUU5QixvQkFDSSxvQkFBQyxHQUFHLHFCQUNBLG9CQUFDLElBQUk7SUFBQyxLQUFLLEVBQUVxQixTQUFTLEdBQUcsT0FBTyxHQUFHLE9BQVE7SUFBQyxJQUFJO0VBQUEsR0FBRWpCLEtBQUssQ0FBQ2tCLFlBQVksQ0FBUSxlQUM1RSxvQkFBQyxPQUFPLE9BQUcsQ0FDVDtBQUVkLENBQUM7QUFFREMsTUFBTSxDQUFDQyxPQUFPLEdBQUdyQixZQUFZIn0=
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline
} = require('ink');
const BigText = require('ink-big-text');
const Gradient = require('ink-gradient');
const axios = require('axios');

// Spotify client required parameters

const MainView = props => {
  const [data, setData] = useState('');
  const [playlist, setPlaylist] = useState(null);
  useEffect(async () => {
    const temp = await axios.get('/me');
    setData(temp.data.display_name);
  }, []);
  useEffect(async () => {
    if (props.playlistId !== '') {
      const playlistInfo = await axios.get(`/playlists/${props.playlistId}`);
      setPlaylist(playlistInfo);
    }
  }, [props.playlistId]);
  return /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "100%",
    borderStyle: "single",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    padding: 2
  }, /*#__PURE__*/React.createElement(BigText, {
    text: playlist ? playlist.data.name : 'Playlist Name',
    font: "tiny"
  }), /*#__PURE__*/React.createElement(Tracks, {
    tracks: playlist ? playlist.data.tracks : ''
  }));
};
const Tracks = props => {
  return /*#__PURE__*/React.createElement(Text, null, props.tracks ? props.tracks.href : 'no tracks');
};
module.exports = MainView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiQmlnVGV4dCIsIkdyYWRpZW50IiwiYXhpb3MiLCJNYWluVmlldyIsInByb3BzIiwiZGF0YSIsInNldERhdGEiLCJwbGF5bGlzdCIsInNldFBsYXlsaXN0IiwidGVtcCIsImdldCIsImRpc3BsYXlfbmFtZSIsInBsYXlsaXN0SWQiLCJwbGF5bGlzdEluZm8iLCJuYW1lIiwidHJhY2tzIiwiVHJhY2tzIiwiaHJlZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJNYWluVmlldy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIFRleHQsIE5ld2xpbmUgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoJ2luay1iaWctdGV4dCcpO1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKCdpbmstZ3JhZGllbnQnKVxuY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpXG5cblxuLy8gU3BvdGlmeSBjbGllbnQgcmVxdWlyZWQgcGFyYW1ldGVyc1xuXG5jb25zdCBNYWluVmlldyA9IChwcm9wcykgPT57XG5cbiAgICBjb25zdCBbZGF0YSxzZXREYXRhXSA9IHVzZVN0YXRlKCcnKVxuICAgIGNvbnN0IFtwbGF5bGlzdCxzZXRQbGF5bGlzdF0gPSB1c2VTdGF0ZShudWxsKVxuXG4gICAgdXNlRWZmZWN0KGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgdGVtcCA9IGF3YWl0IGF4aW9zLmdldCgnL21lJylcbiAgICAgICAgc2V0RGF0YSh0ZW1wLmRhdGEuZGlzcGxheV9uYW1lKVxuICAgIH0sW10pXG5cbiAgICB1c2VFZmZlY3QoYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZihwcm9wcy5wbGF5bGlzdElkICE9PSAnJyl7XG4gICAgICAgICAgICBjb25zdCBwbGF5bGlzdEluZm8gPSBhd2FpdCBheGlvcy5nZXQoYC9wbGF5bGlzdHMvJHtwcm9wcy5wbGF5bGlzdElkfWApXG4gICAgICAgICAgICBzZXRQbGF5bGlzdChwbGF5bGlzdEluZm8pXG4gICAgICAgIH1cbiAgICB9LFtwcm9wcy5wbGF5bGlzdElkXSlcblxuICAgIHJldHVybihcbiAgICAgICAgPEJveCBoZWlnaHQ9e1wiMTAwJVwifSB3aWR0aD17XCIxMDAlXCJ9IGJvcmRlclN0eWxlPSdzaW5nbGUnIGZsZXhEaXJlY3Rpb249J2NvbHVtbicgYWxpZ25JdGVtcz0nY2VudGVyJyBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBwYWRkaW5nPXsyfT5cbiAgICAgICAgICAgIDxCaWdUZXh0XG4gICAgICAgICAgICAgIHRleHQ9IHtwbGF5bGlzdCA/IHBsYXlsaXN0LmRhdGEubmFtZSA6ICdQbGF5bGlzdCBOYW1lJ31cbiAgICAgICAgICAgICAgZm9udD0ndGlueSdcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8VHJhY2tzIHRyYWNrcz17cGxheWxpc3QgPyBwbGF5bGlzdC5kYXRhLnRyYWNrcyA6ICcnfS8+XG5cbiAgICAgICAgPC9Cb3g+XG4gICAgKVxufVxuXG5jb25zdCBUcmFja3MgPSAocHJvcHMpID0+e1xuXG4gICAgcmV0dXJuKFxuICAgICAgICBcbiAgICAgICAgPFRleHQ+e3Byb3BzLnRyYWNrcyA/IHByb3BzLnRyYWNrcy5ocmVmIDogJ25vIHRyYWNrcyd9PC9UZXh0PlxuICAgIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNYWluVmlldztcblxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDLE1BQU07RUFBRUksR0FBRztFQUFFQyxJQUFJO0VBQUVDO0FBQVEsQ0FBQyxHQUFHTCxPQUFPLENBQUMsS0FBSyxDQUFDO0FBQzdDLE1BQU1NLE9BQU8sR0FBR04sT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN2QyxNQUFNTyxRQUFRLEdBQUdQLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDeEMsTUFBTVEsS0FBSyxHQUFHUixPQUFPLENBQUMsT0FBTyxDQUFDOztBQUc5Qjs7QUFFQSxNQUFNUyxRQUFRLEdBQUlDLEtBQUssSUFBSTtFQUV2QixNQUFNLENBQUNDLElBQUksRUFBQ0MsT0FBTyxDQUFDLEdBQUdYLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDbkMsTUFBTSxDQUFDWSxRQUFRLEVBQUNDLFdBQVcsQ0FBQyxHQUFHYixRQUFRLENBQUMsSUFBSSxDQUFDO0VBRTdDQyxTQUFTLENBQUMsWUFBWTtJQUNsQixNQUFNYSxJQUFJLEdBQUcsTUFBTVAsS0FBSyxDQUFDUSxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQ25DSixPQUFPLENBQUNHLElBQUksQ0FBQ0osSUFBSSxDQUFDTSxZQUFZLENBQUM7RUFDbkMsQ0FBQyxFQUFDLEVBQUUsQ0FBQztFQUVMZixTQUFTLENBQUMsWUFBWTtJQUNsQixJQUFHUSxLQUFLLENBQUNRLFVBQVUsS0FBSyxFQUFFLEVBQUM7TUFDdkIsTUFBTUMsWUFBWSxHQUFHLE1BQU1YLEtBQUssQ0FBQ1EsR0FBRyxDQUFFLGNBQWFOLEtBQUssQ0FBQ1EsVUFBVyxFQUFDLENBQUM7TUFDdEVKLFdBQVcsQ0FBQ0ssWUFBWSxDQUFDO0lBQzdCO0VBQ0osQ0FBQyxFQUFDLENBQUNULEtBQUssQ0FBQ1EsVUFBVSxDQUFDLENBQUM7RUFFckIsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLE1BQU0sRUFBRSxNQUFPO0lBQUMsS0FBSyxFQUFFLE1BQU87SUFBQyxXQUFXLEVBQUMsUUFBUTtJQUFDLGFBQWEsRUFBQyxRQUFRO0lBQUMsVUFBVSxFQUFDLFFBQVE7SUFBQyxjQUFjLEVBQUMsUUFBUTtJQUFDLE9BQU8sRUFBRTtFQUFFLGdCQUNuSSxvQkFBQyxPQUFPO0lBQ04sSUFBSSxFQUFHTCxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDUyxJQUFJLEdBQUcsZUFBZ0I7SUFDdkQsSUFBSSxFQUFDO0VBQU0sRUFDWCxlQUNGLG9CQUFDLE1BQU07SUFBQyxNQUFNLEVBQUVQLFFBQVEsR0FBR0EsUUFBUSxDQUFDRixJQUFJLENBQUNVLE1BQU0sR0FBRztFQUFHLEVBQUUsQ0FFckQ7QUFFZCxDQUFDO0FBRUQsTUFBTUMsTUFBTSxHQUFJWixLQUFLLElBQUk7RUFFckIsb0JBRUksb0JBQUMsSUFBSSxRQUFFQSxLQUFLLENBQUNXLE1BQU0sR0FBR1gsS0FBSyxDQUFDVyxNQUFNLENBQUNFLElBQUksR0FBRyxXQUFXLENBQVE7QUFFckUsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR2hCLFFBQVEifQ==
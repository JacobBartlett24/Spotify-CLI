const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  render,
  useApp,
  useInput,
  Text
} = require("ink");
const API = require('../SpotifyAPI/API');
const fs = require('fs');
const data = require('../SpotifyAPI/data.json');
const importJsx = require('import-jsx');
const MainBox = importJsx('./MainBox');
const APIui = () => {
  const [result, setResult] = useState('');
  const {
    exit
  } = useApp();
  useEffect(() => {
    render( /*#__PURE__*/React.createElement(MainBox, {
      title: "Spotify"
    }));
  }, [result]);
  fs.watch('./SpotifyAPI/data.json', () => {
    setResult(fs.readFileSync('./SpotifyAPI/data.json').toString());
  });
  useInput(async (input, key) => {
    if (input === 'q') {
      exit();
    } else if (input === 'a') {
      API();
    }
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, "Hit \"a\" to connect to UI"));
};
module.exports = APIui;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInJlbmRlciIsInVzZUFwcCIsInVzZUlucHV0IiwiVGV4dCIsIkFQSSIsImZzIiwiZGF0YSIsImltcG9ydEpzeCIsIk1haW5Cb3giLCJBUEl1aSIsInJlc3VsdCIsInNldFJlc3VsdCIsImV4aXQiLCJ3YXRjaCIsInJlYWRGaWxlU3luYyIsInRvU3RyaW5nIiwiaW5wdXQiLCJrZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQVBJdWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcbmNvbnN0IHsgcmVuZGVyLCB1c2VBcHAsIHVzZUlucHV0LCBUZXh0IH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuY29uc3QgQVBJID0gcmVxdWlyZSgnLi4vU3BvdGlmeUFQSS9BUEknKVxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBkYXRhID0gcmVxdWlyZSgnLi4vU3BvdGlmeUFQSS9kYXRhLmpzb24nKTtcbmNvbnN0IGltcG9ydEpzeCA9IHJlcXVpcmUoJ2ltcG9ydC1qc3gnKTtcbmNvbnN0IE1haW5Cb3ggPSBpbXBvcnRKc3goJy4vTWFpbkJveCcpXG5cbmNvbnN0IEFQSXVpID0gKCkgPT57XG4gIFxuICBjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGUoJycpXG4gIGNvbnN0IHtleGl0fSA9IHVzZUFwcCgpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PntcbiAgICByZW5kZXIoPE1haW5Cb3ggdGl0bGU9J1Nwb3RpZnknLz4pXG4gIH0sW3Jlc3VsdF0pXG5cbiAgZnMud2F0Y2goJy4vU3BvdGlmeUFQSS9kYXRhLmpzb24nLCAoKSA9PiB7XG4gICAgc2V0UmVzdWx0KGZzLnJlYWRGaWxlU3luYygnLi9TcG90aWZ5QVBJL2RhdGEuanNvbicpLnRvU3RyaW5nKCkpO1xuICB9KVxuXG4gIHVzZUlucHV0KGFzeW5jIChpbnB1dCwga2V5KSA9PiB7XG5cdCAgaWYgKGlucHV0ID09PSAncScpIHtcblx0XHQgIGV4aXQoKVxuICAgIH1lbHNlIGlmKGlucHV0ID09PSAnYScpe1xuICAgICAgQVBJKClcbiAgICB9XG5cdH0pO1xuXG4gIHJldHVybihcbiAgICA8PlxuICAgICAgPFRleHQ+SGl0IFwiYVwiIHRvIGNvbm5lY3QgdG8gVUk8L1RleHQ+XG4gICAgPC8+XG4gIClcbiAgXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQVBJdWk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDLE1BQU07RUFBRUksTUFBTTtFQUFFQyxNQUFNO0VBQUVDLFFBQVE7RUFBRUM7QUFBSyxDQUFDLEdBQUdOLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDekQsTUFBTU8sR0FBRyxHQUFHUCxPQUFPLENBQUMsbUJBQW1CLENBQUM7QUFDeEMsTUFBTVEsRUFBRSxHQUFHUixPQUFPLENBQUMsSUFBSSxDQUFDO0FBQ3hCLE1BQU1TLElBQUksR0FBR1QsT0FBTyxDQUFDLHlCQUF5QixDQUFDO0FBQy9DLE1BQU1VLFNBQVMsR0FBR1YsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUN2QyxNQUFNVyxPQUFPLEdBQUdELFNBQVMsQ0FBQyxXQUFXLENBQUM7QUFFdEMsTUFBTUUsS0FBSyxHQUFHLE1BQUs7RUFFakIsTUFBTSxDQUFDQyxNQUFNLEVBQUVDLFNBQVMsQ0FBQyxHQUFHYixRQUFRLENBQUMsRUFBRSxDQUFDO0VBQ3hDLE1BQU07SUFBQ2M7RUFBSSxDQUFDLEdBQUdYLE1BQU0sRUFBRTtFQUV2QkYsU0FBUyxDQUFDLE1BQUs7SUFDYkMsTUFBTSxlQUFDLG9CQUFDLE9BQU87TUFBQyxLQUFLLEVBQUM7SUFBUyxFQUFFLENBQUM7RUFDcEMsQ0FBQyxFQUFDLENBQUNVLE1BQU0sQ0FBQyxDQUFDO0VBRVhMLEVBQUUsQ0FBQ1EsS0FBSyxDQUFDLHdCQUF3QixFQUFFLE1BQU07SUFDdkNGLFNBQVMsQ0FBQ04sRUFBRSxDQUFDUyxZQUFZLENBQUMsd0JBQXdCLENBQUMsQ0FBQ0MsUUFBUSxFQUFFLENBQUM7RUFDakUsQ0FBQyxDQUFDO0VBRUZiLFFBQVEsQ0FBQyxPQUFPYyxLQUFLLEVBQUVDLEdBQUcsS0FBSztJQUM5QixJQUFJRCxLQUFLLEtBQUssR0FBRyxFQUFFO01BQ2xCSixJQUFJLEVBQUU7SUFDTixDQUFDLE1BQUssSUFBR0ksS0FBSyxLQUFLLEdBQUcsRUFBQztNQUNyQlosR0FBRyxFQUFFO0lBQ1A7RUFDSCxDQUFDLENBQUM7RUFFRCxvQkFDRSx1REFDRSxvQkFBQyxJQUFJLHFDQUFnQyxDQUNwQztBQUdQLENBQUM7QUFFRGMsTUFBTSxDQUFDQyxPQUFPLEdBQUdWLEtBQUsifQ==
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  useEffect(async () => {
    const temp = await axios.get('/me/playlists');
    setPlaylistData(temp.data.items.map(playlist => /*#__PURE__*/React.createElement(Box, {
      key: playlist.id
    }, /*#__PURE__*/React.createElement(Text, null, playlist.name), /*#__PURE__*/React.createElement(Newline, null))));
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), playlistData);
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiQmlnVGV4dCIsImF4aW9zIiwiUGxheWxpc3RQYWdlIiwicHJvcHMiLCJwbGF5bGlzdERhdGEiLCJzZXRQbGF5bGlzdERhdGEiLCJ0ZW1wIiwiZ2V0IiwiZGF0YSIsIml0ZW1zIiwibWFwIiwicGxheWxpc3QiLCJpZCIsIm5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUGxheWxpc3RQYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG5jb25zdCB7IEJveCwgVGV4dCwgTmV3bGluZSB9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cblxuY29uc3QgUGxheWxpc3RQYWdlID0gKHByb3BzKSA9PntcblxuICAgIGNvbnN0IFtwbGF5bGlzdERhdGEsc2V0UGxheWxpc3REYXRhXSA9IHVzZVN0YXRlKFtdKVxuXG4gICAgdXNlRWZmZWN0KGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgdGVtcCA9IGF3YWl0IGF4aW9zLmdldCgnL21lL3BsYXlsaXN0cycpXG5cbiAgICAgICAgc2V0UGxheWxpc3REYXRhKHRlbXAuZGF0YS5pdGVtcy5tYXAocGxheWxpc3QgPT5cbiAgICAgICAgICAgIDxCb3gga2V5PXtwbGF5bGlzdC5pZH0+XG4gICAgICAgICAgICAgICAgPFRleHQ+e3BsYXlsaXN0Lm5hbWV9PC9UZXh0PlxuICAgICAgICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgKSk7XG4gICAgfSxbXSlcblxuICAgIHJldHVybihcbiAgICAgICAgPEJveCBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nPlxuICAgICAgICAgICAgPFRleHQ+UGxheWxpc3QgUGFnZTwvVGV4dD5cbiAgICAgICAgICAgIHtwbGF5bGlzdERhdGF9XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5bGlzdFBhZ2U7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQyxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsSUFBSTtFQUFFQztBQUFRLENBQUMsR0FBR0wsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUM3QyxNQUFNTSxPQUFPLEdBQUdOLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDdkMsTUFBTU8sS0FBSyxHQUFHUCxPQUFPLENBQUMsT0FBTyxDQUFDO0FBRzlCLE1BQU1RLFlBQVksR0FBSUMsS0FBSyxJQUFJO0VBRTNCLE1BQU0sQ0FBQ0MsWUFBWSxFQUFDQyxlQUFlLENBQUMsR0FBR1YsUUFBUSxDQUFDLEVBQUUsQ0FBQztFQUVuREMsU0FBUyxDQUFDLFlBQVk7SUFDbEIsTUFBTVUsSUFBSSxHQUFHLE1BQU1MLEtBQUssQ0FBQ00sR0FBRyxDQUFDLGVBQWUsQ0FBQztJQUU3Q0YsZUFBZSxDQUFDQyxJQUFJLENBQUNFLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxHQUFHLENBQUNDLFFBQVEsaUJBQ3hDLG9CQUFDLEdBQUc7TUFBQyxHQUFHLEVBQUVBLFFBQVEsQ0FBQ0M7SUFBRyxnQkFDbEIsb0JBQUMsSUFBSSxRQUFFRCxRQUFRLENBQUNFLElBQUksQ0FBUSxlQUM1QixvQkFBQyxPQUFPLE9BQUcsQ0FDVCxDQUNULENBQUM7RUFDTixDQUFDLEVBQUMsRUFBRSxDQUFDO0VBRUwsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixFQUN6QlQsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVEVSxNQUFNLENBQUNDLE9BQU8sR0FBR2IsWUFBWSJ9
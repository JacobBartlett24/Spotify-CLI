// MainBox.js
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Newline,
  useInput,
  useApp,
  useFocus
} = require('ink');
const TextInput = require('ink-text-input').default;
const API = require('../SpotifyAPI/API');
const Gradient = require('ink-gradient');
const BigText = require('ink-big-text');
const importJsx = require('import-jsx');
const PlaylistPage = importJsx('./PlaylistPage');
const MainView = importJsx('./MainView');
const MusicPlayer = importJsx('./MusicPlayer');
const Unknown = importJsx('./Unknown');
const MainBox = props => {
  const {
    exit
  } = useApp();
  useInput(async (input, key) => {
    if (input === 'q') {
      exit();
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderColor: 'green',
    borderStyle: "single",
    height: 58,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "summer"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: props.title,
    align: "center",
    font: "tiny"
  })), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    padding: 1,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "15%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(PlaylistPage, null)), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MusicPlayer, null))), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "85%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MainView, {
    userInformation: props.userInformation
  })), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(Unknown, null)), /*#__PURE__*/React.createElement("focusTest", {
    label: "First"
  }), /*#__PURE__*/React.createElement("focusTest", {
    label: "Second"
  }), /*#__PURE__*/React.createElement("focusTest", {
    label: "Third"
  }))));
};
const focusTest = ({
  label
}) => {
  const {
    isFocused
  } = useFocus();
  return /*#__PURE__*/React.createElement(Text, null, label, " ", isFocused && /*#__PURE__*/React.createElement(Text, {
    color: "green"
  }, "(focused)"));
};
module.exports = MainBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIk5ld2xpbmUiLCJ1c2VJbnB1dCIsInVzZUFwcCIsInVzZUZvY3VzIiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFQSSIsIkdyYWRpZW50IiwiQmlnVGV4dCIsImltcG9ydEpzeCIsIlBsYXlsaXN0UGFnZSIsIk1haW5WaWV3IiwiTXVzaWNQbGF5ZXIiLCJVbmtub3duIiwiTWFpbkJveCIsInByb3BzIiwiZXhpdCIsImlucHV0Iiwia2V5IiwidGl0bGUiLCJpc0ZvY3VzZWQiLCJ1c2VySW5mb3JtYXRpb24iLCJmb2N1c1Rlc3QiLCJsYWJlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJNYWluQm94LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1haW5Cb3guanNcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG5jb25zdCB7IEJveCwgTmV3bGluZSwgdXNlSW5wdXQsIHVzZUFwcCwgdXNlRm9jdXMgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgQVBJID0gcmVxdWlyZSgnLi4vU3BvdGlmeUFQSS9BUEknKTtcbmNvbnN0IEdyYWRpZW50ID0gcmVxdWlyZSgnaW5rLWdyYWRpZW50Jyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBpbXBvcnRKc3ggPSByZXF1aXJlKCdpbXBvcnQtanN4Jyk7XG5jb25zdCBQbGF5bGlzdFBhZ2UgPSBpbXBvcnRKc3goJy4vUGxheWxpc3RQYWdlJyk7XG5jb25zdCBNYWluVmlldyA9IGltcG9ydEpzeCgnLi9NYWluVmlldycpO1xuY29uc3QgTXVzaWNQbGF5ZXIgPSBpbXBvcnRKc3goJy4vTXVzaWNQbGF5ZXInKTtcbmNvbnN0IFVua25vd24gPSBpbXBvcnRKc3goJy4vVW5rbm93bicpO1xuXG5jb25zdCBNYWluQm94ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtleGl0fSA9IHVzZUFwcCgpO1xuXG4gIHVzZUlucHV0KGFzeW5jIChpbnB1dCwga2V5KSA9PiB7XG5cdCAgaWYgKGlucHV0ID09PSAncScpIHtcblx0XHQgIGV4aXQoKVxuICAgIH1cblx0fSk7XG5cbiAgcmV0dXJuIChcbiAgICBcbiAgICA8Qm94IGJvcmRlckNvbG9yPXsnZ3JlZW4nfSBib3JkZXJTdHlsZT0nc2luZ2xlJyBoZWlnaHQ9ezU4fSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICA8R3JhZGllbnQgbmFtZT1cInN1bW1lclwiPlxuICAgICAgICA8QmlnVGV4dFxuICAgICAgICAgIHRleHQ9e3Byb3BzLnRpdGxlfSBcbiAgICAgICAgICBhbGlnbj0nY2VudGVyJyBcbiAgICAgICAgICBmb250PSd0aW55J1xuICAgICAgICAvPlxuICAgICAgPC9HcmFkaWVudD5cbiAgICAgIDxCb3ggaGVpZ2h0PXtcIjEwMCVcIn0gcGFkZGluZz17MX0gZmxleERpcmVjdGlvbj0ncm93JyBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBhbGlnbkl0ZW1zPSdjZW50ZXInPlxuICAgICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjE1JVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gJ2JsYWNrJyA6ICdncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICAgIDxQbGF5bGlzdFBhZ2UgLz5cbiAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8Qm94IGJvcmRlclN0eWxlPSdzaW5nbGUnIGJvcmRlckNvbG9yPXtpc0ZvY3VzZWQgPyAnYmxhY2snIDogJ2dyZWVuJ30gaGVpZ2h0PXtcIjMwJVwifSB3aWR0aD17XCIxMDAlXCJ9PlxuICAgICAgICAgICAgPE11c2ljUGxheWVyIC8+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjg1JVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gJ2JsYWNrJyA6ICdncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICAgIDxNYWluVmlldyB1c2VySW5mb3JtYXRpb249e3Byb3BzLnVzZXJJbmZvcm1hdGlvbn0vPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9e2lzRm9jdXNlZCA/ICdibGFjaycgOiAnZ3JlZW4nfSBoZWlnaHQ9e1wiMzAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0+XG4gICAgICAgICAgICA8VW5rbm93biAvPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxmb2N1c1Rlc3QgbGFiZWw9XCJGaXJzdFwiIC8+XG4gICAgICAgICAgPGZvY3VzVGVzdCBsYWJlbD1cIlNlY29uZFwiIC8+XG4gICAgICAgICAgPGZvY3VzVGVzdCBsYWJlbD1cIlRoaXJkXCIgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICA8L0JveD5cbiAgICA8L0JveD5cbiAgKVxufVxuXG5jb25zdCBmb2N1c1Rlc3QgPSAoe2xhYmVsfSkgPT57XG4gIGNvbnN0IHtpc0ZvY3VzZWR9ID0gdXNlRm9jdXMoKTtcblx0cmV0dXJuIChcblx0XHQ8VGV4dD5cblx0XHRcdHtsYWJlbH0ge2lzRm9jdXNlZCAmJiA8VGV4dCBjb2xvcj1cImdyZWVuXCI+KGZvY3VzZWQpPC9UZXh0Pn1cblx0XHQ8L1RleHQ+XG5cdCk7XG59XG5cbm1vZHVsZS5l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
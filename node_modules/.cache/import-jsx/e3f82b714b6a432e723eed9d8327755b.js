// MainBox.js

const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline
} = require('ink');
const Gradient = require('ink-gradient');
const BigText = require('ink-big-text');
const importJsx = require('import-jsx');
const PlaylistPage = importJsx('./PlaylistPage');
const MainView = importJsx('./MainView');
const MusicPlayer = importJsx('./MusicPlayer');
const Unknown = importJsx('./Unknown');
const MainBox = props => {
  const [data, setData] = useState([]);
  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    height: 50,
    padding: 1,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "summer"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: props.title,
    align: "center",
    font: "chrome"
  })), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "30%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(PlaylistPage, null)), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MusicPlayer, null))), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "70%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MainView, null)), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(Unknown, null))));
};
module.exports = MainBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiR3JhZGllbnQiLCJCaWdUZXh0IiwiaW1wb3J0SnN4IiwiUGxheWxpc3RQYWdlIiwiTWFpblZpZXciLCJNdXNpY1BsYXllciIsIlVua25vd24iLCJNYWluQm94IiwicHJvcHMiLCJkYXRhIiwic2V0RGF0YSIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk1haW5Cb3guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFpbkJveC5qc1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIFRleHQsIE5ld2xpbmUgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKCdpbmstZ3JhZGllbnQnKTtcbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKCdpbmstYmlnLXRleHQnKTtcbmNvbnN0IGltcG9ydEpzeCA9IHJlcXVpcmUoJ2ltcG9ydC1qc3gnKTtcbmNvbnN0IFBsYXlsaXN0UGFnZSA9IGltcG9ydEpzeCgnLi9QbGF5bGlzdFBhZ2UnKVxuY29uc3QgTWFpblZpZXcgPSBpbXBvcnRKc3goJy4vTWFpblZpZXcnKVxuY29uc3QgTXVzaWNQbGF5ZXIgPSBpbXBvcnRKc3goJy4vTXVzaWNQbGF5ZXInKVxuY29uc3QgVW5rbm93biA9IGltcG9ydEpzeCgnLi9Vbmtub3duJylcblxuXG5jb25zdCBNYWluQm94ID0gKHByb3BzKSA9PiB7XG5cbiAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBoZWlnaHQ9ezUwfSBwYWRkaW5nPXsxfSBmbGV4RGlyZWN0aW9uPSdyb3cnIGp1c3RpZnlDb250ZW50PSdjZW50ZXInIGFsaWduSXRlbXM9J2NlbnRlcic+XG4gICAgPEdyYWRpZW50IG5hbWU9XCJzdW1tZXJcIj5cblx0XHRcdDxCaWdUZXh0IFxuXHRcdFx0XHR0ZXh0PXtwcm9wcy50aXRsZX0gXG5cdFx0XHRcdGFsaWduPSdjZW50ZXInIFxuXHRcdFx0XHRmb250PSdjaHJvbWUnXG5cdFx0XHQvPlxuXHRcdDwvR3JhZGllbnQ+XG4gICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjMwJVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9eydncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICA8UGxheWxpc3RQYWdlIC8+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8Qm94IGJvcmRlclN0eWxlPSdzaW5nbGUnIGJvcmRlckNvbG9yPXsnZ3JlZW4nfSBoZWlnaHQ9e1wiMzAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0+XG4gICAgICAgICAgPE11c2ljUGxheWVyIC8+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9Cb3g+XG4gICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjcwJVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9eydncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICA8TWFpblZpZXcgLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9eydncmVlbid9IGhlaWdodD17XCIzMCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICA8VW5rbm93biAvPlxuICAgICAgICA8L0JveD5cbiAgICAgIDwvQm94PlxuICAgIDwvQm94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
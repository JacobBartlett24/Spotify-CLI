const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline,
  useFocus
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  const {
    isFocused
  } = useFocus();
  useEffect(async () => {
    const temp = await axios.get('/me/playlists');
    setPlaylistData(temp.data.items.map(playlist => /*#__PURE__*/React.createElement(Box, {
      key: playlist.id
    }, /*#__PURE__*/React.createElement(Text, {
      autoFocus: true,
      bold: true
    }, playlist.name), /*#__PURE__*/React.createElement(Newline, null))));
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), /*#__PURE__*/React.createElement(Newline, null), playlistData);
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwidXNlRm9jdXMiLCJCaWdUZXh0IiwiYXhpb3MiLCJQbGF5bGlzdFBhZ2UiLCJwcm9wcyIsInBsYXlsaXN0RGF0YSIsInNldFBsYXlsaXN0RGF0YSIsImlzRm9jdXNlZCIsInRlbXAiLCJnZXQiLCJkYXRhIiwiaXRlbXMiLCJtYXAiLCJwbGF5bGlzdCIsImlkIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJQbGF5bGlzdFBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcbmNvbnN0IHsgQm94LCBUZXh0LCBOZXdsaW5lLCB1c2VGb2N1cyB9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cblxuY29uc3QgUGxheWxpc3RQYWdlID0gKHByb3BzKSA9PntcblxuICAgIGNvbnN0IFtwbGF5bGlzdERhdGEsc2V0UGxheWxpc3REYXRhXSA9IHVzZVN0YXRlKFtdKVxuICAgIGNvbnN0IHtpc0ZvY3VzZWR9ID0gdXNlRm9jdXMoKTtcblxuICAgIHVzZUVmZmVjdChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRlbXAgPSBhd2FpdCBheGlvcy5nZXQoJy9tZS9wbGF5bGlzdHMnKVxuXG4gICAgICAgIHNldFBsYXlsaXN0RGF0YSh0ZW1wLmRhdGEuaXRlbXMubWFwKHBsYXlsaXN0ID0+XG4gICAgICAgICAgICA8Qm94IGtleT17cGxheWxpc3QuaWR9PlxuICAgICAgICAgICAgICAgIDxUZXh0IGF1dG9Gb2N1cyBib2xkPntwbGF5bGlzdC5uYW1lfTwvVGV4dD5cbiAgICAgICAgICAgICAgICA8TmV3bGluZSAvPlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICkpO1xuICAgIH0sW10pXG5cbiAgICByZXR1cm4oXG4gICAgICAgIDxCb3ggZmxleERpcmVjdGlvbj0nY29sdW1uJz5cbiAgICAgICAgICAgIDxUZXh0PlBsYXlsaXN0IFBhZ2U8L1RleHQ+XG4gICAgICAgICAgICA8TmV3bGluZSAvPlxuICAgICAgICAgICAge3BsYXlsaXN0RGF0YX1cbiAgICAgICAgPC9Cb3g+XG4gICAgKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXlsaXN0UGFnZTtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDLE1BQU07RUFBRUksR0FBRztFQUFFQyxJQUFJO0VBQUVDLE9BQU87RUFBRUM7QUFBUyxDQUFDLEdBQUdOLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDdkQsTUFBTU8sT0FBTyxHQUFHUCxPQUFPLENBQUMsY0FBYyxDQUFDO0FBQ3ZDLE1BQU1RLEtBQUssR0FBR1IsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUc5QixNQUFNUyxZQUFZLEdBQUlDLEtBQUssSUFBSTtFQUUzQixNQUFNLENBQUNDLFlBQVksRUFBQ0MsZUFBZSxDQUFDLEdBQUdYLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDbkQsTUFBTTtJQUFDWTtFQUFTLENBQUMsR0FBR1AsUUFBUSxFQUFFO0VBRTlCSixTQUFTLENBQUMsWUFBWTtJQUNsQixNQUFNWSxJQUFJLEdBQUcsTUFBTU4sS0FBSyxDQUFDTyxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRTdDSCxlQUFlLENBQUNFLElBQUksQ0FBQ0UsSUFBSSxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxpQkFDeEMsb0JBQUMsR0FBRztNQUFDLEdBQUcsRUFBRUEsUUFBUSxDQUFDQztJQUFHLGdCQUNsQixvQkFBQyxJQUFJO01BQUMsU0FBUztNQUFDLElBQUk7SUFBQSxHQUFFRCxRQUFRLENBQUNFLElBQUksQ0FBUSxlQUMzQyxvQkFBQyxPQUFPLE9BQUcsQ0FDVCxDQUNULENBQUM7RUFDTixDQUFDLEVBQUMsRUFBRSxDQUFDO0VBRUwsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixlQUMxQixvQkFBQyxPQUFPLE9BQUcsRUFDVlYsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVEVyxNQUFNLENBQUNDLE9BQU8sR0FBR2QsWUFBWSJ9
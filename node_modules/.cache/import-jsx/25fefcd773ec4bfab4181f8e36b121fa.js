const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');

// Spotify client required parameters

const MainView = props => {
  const [data, setData] = useState('');
  const [playlist, setPlaylist] = useState(null);
  useEffect(async () => {
    const temp = await axios.get('/me');
    setData(temp.data.display_name);
  }, []);
  useEffect(async () => {
    if (props.playlistId !== '') {
      const playlistInfo = await axios.get(`/playlists/${props.playlistId}`);
      setPlaylist(playlistInfo);
    }
  }, [props.playlistId]);
  return /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "100%",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    height: "40%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "summer"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: playlist ? playlist.data.name : '',
    align: "center",
    font: "tiny"
  })), /*#__PURE__*/React.createElement(Text, null, data)));
};
const Track = () => {};
module.exports = MainView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiQmlnVGV4dCIsImF4aW9zIiwiTWFpblZpZXciLCJwcm9wcyIsImRhdGEiLCJzZXREYXRhIiwicGxheWxpc3QiLCJzZXRQbGF5bGlzdCIsInRlbXAiLCJnZXQiLCJkaXNwbGF5X25hbWUiLCJwbGF5bGlzdElkIiwicGxheWxpc3RJbmZvIiwibmFtZSIsIlRyYWNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk1haW5WaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG5jb25zdCB7IEJveCwgVGV4dCwgTmV3bGluZSB9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJylcblxuXG4vLyBTcG90aWZ5IGNsaWVudCByZXF1aXJlZCBwYXJhbWV0ZXJzXG5cbmNvbnN0IE1haW5WaWV3ID0gKHByb3BzKSA9PntcblxuICAgIGNvbnN0IFtkYXRhLHNldERhdGFdID0gdXNlU3RhdGUoJycpXG4gICAgY29uc3QgW3BsYXlsaXN0LHNldFBsYXlsaXN0XSA9IHVzZVN0YXRlKG51bGwpXG5cbiAgICB1c2VFZmZlY3QoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCB0ZW1wID0gYXdhaXQgYXhpb3MuZ2V0KCcvbWUnKVxuICAgICAgICBzZXREYXRhKHRlbXAuZGF0YS5kaXNwbGF5X25hbWUpXG4gICAgfSxbXSlcblxuICAgIHVzZUVmZmVjdChhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmKHByb3BzLnBsYXlsaXN0SWQgIT09ICcnKXtcbiAgICAgICAgICAgIGNvbnN0IHBsYXlsaXN0SW5mbyA9IGF3YWl0IGF4aW9zLmdldChgL3BsYXlsaXN0cy8ke3Byb3BzLnBsYXlsaXN0SWR9YClcbiAgICAgICAgICAgIHNldFBsYXlsaXN0KHBsYXlsaXN0SW5mbylcbiAgICAgICAgfVxuICAgIH0sW3Byb3BzLnBsYXlsaXN0SWRdKVxuXG4gICAgcmV0dXJuKFxuICAgICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0gZmxleERpcmVjdGlvbj0nY29sdW1uJyBhbGlnbkl0ZW1zPSdjZW50ZXInIGp1c3RpZnlDb250ZW50PSdjZW50ZXInPlxuICAgICAgICAgICAgPEJveCBoZWlnaHQ9e1wiNDAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0+XG4gICAgICAgICAgICA8R3JhZGllbnQgbmFtZT1cInN1bW1lclwiPlxuICAgICAgICAgICAgICAgIDxCaWdUZXh0XG4gICAgICAgICAgICAgICAgICB0ZXh0PXtwbGF5bGlzdCA/IHBsYXlsaXN0LmRhdGEubmFtZSA6ICcnfSBcbiAgICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInIFxuICAgICAgICAgICAgICAgICAgZm9udD0ndGlueSdcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9HcmFkaWVudD5cbiAgICAgICAgICAgICAgICAgICAgPFRleHQ+e2RhdGF9PC9UZXh0PlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxuY29uc3QgVHJhY2sgPSAoKSA9PntcblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE1haW5WaWV3O1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVDLFFBQVE7RUFBRUM7QUFBVSxDQUFDLEdBQUdILEtBQUs7QUFDckMsTUFBTTtFQUFFSSxHQUFHO0VBQUVDLElBQUk7RUFBRUM7QUFBUSxDQUFDLEdBQUdMLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDN0MsTUFBTU0sT0FBTyxHQUFHTixPQUFPLENBQUMsY0FBYyxDQUFDO0FBQ3ZDLE1BQU1PLEtBQUssR0FBR1AsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7QUFHOUI7O0FBRUEsTUFBTVEsUUFBUSxHQUFJQyxLQUFLLElBQUk7RUFFdkIsTUFBTSxDQUFDQyxJQUFJLEVBQUNDLE9BQU8sQ0FBQyxHQUFHVixRQUFRLENBQUMsRUFBRSxDQUFDO0VBQ25DLE1BQU0sQ0FBQ1csUUFBUSxFQUFDQyxXQUFXLENBQUMsR0FBR1osUUFBUSxDQUFDLElBQUksQ0FBQztFQUU3Q0MsU0FBUyxDQUFDLFlBQVk7SUFDbEIsTUFBTVksSUFBSSxHQUFHLE1BQU1QLEtBQUssQ0FBQ1EsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUNuQ0osT0FBTyxDQUFDRyxJQUFJLENBQUNKLElBQUksQ0FBQ00sWUFBWSxDQUFDO0VBQ25DLENBQUMsRUFBQyxFQUFFLENBQUM7RUFFTGQsU0FBUyxDQUFDLFlBQVk7SUFDbEIsSUFBR08sS0FBSyxDQUFDUSxVQUFVLEtBQUssRUFBRSxFQUFDO01BQ3ZCLE1BQU1DLFlBQVksR0FBRyxNQUFNWCxLQUFLLENBQUNRLEdBQUcsQ0FBRSxjQUFhTixLQUFLLENBQUNRLFVBQVcsRUFBQyxDQUFDO01BQ3RFSixXQUFXLENBQUNLLFlBQVksQ0FBQztJQUM3QjtFQUNKLENBQUMsRUFBQyxDQUFDVCxLQUFLLENBQUNRLFVBQVUsQ0FBQyxDQUFDO0VBRXJCLG9CQUNJLG9CQUFDLEdBQUc7SUFBQyxNQUFNLEVBQUUsTUFBTztJQUFDLEtBQUssRUFBRSxNQUFPO0lBQUMsYUFBYSxFQUFDLFFBQVE7SUFBQyxVQUFVLEVBQUMsUUFBUTtJQUFDLGNBQWMsRUFBQztFQUFRLGdCQUNsRyxvQkFBQyxHQUFHO0lBQUMsTUFBTSxFQUFFLEtBQU07SUFBQyxLQUFLLEVBQUU7RUFBTyxnQkFDbEMsb0JBQUMsUUFBUTtJQUFDLElBQUksRUFBQztFQUFRLGdCQUNuQixvQkFBQyxPQUFPO0lBQ04sSUFBSSxFQUFFTCxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDUyxJQUFJLEdBQUcsRUFBRztJQUN6QyxLQUFLLEVBQUMsUUFBUTtJQUNkLElBQUksRUFBQztFQUFNLEVBQ1gsQ0FDSyxlQUNILG9CQUFDLElBQUksUUFBRVQsSUFBSSxDQUFRLENBQ3JCLENBQ0o7QUFFZCxDQUFDO0FBRUQsTUFBTVUsS0FBSyxHQUFHLE1BQUssQ0FFbkIsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR2QsUUFBUSJ9
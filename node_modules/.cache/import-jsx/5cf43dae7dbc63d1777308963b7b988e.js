// MainBox.js
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Newline,
  useInput,
  useApp,
  useFocus
} = require('ink');
const TextInput = require('ink-text-input').default;
const API = require('../SpotifyAPI/API');
const Gradient = require('ink-gradient');
const BigText = require('ink-big-text');
const importJsx = require('import-jsx');
const PlaylistPage = importJsx('./PlaylistPage');
const MainView = importJsx('./MainView');
const MusicPlayer = importJsx('./MusicPlayer');
const Unknown = importJsx('./Unknown');
const MainBox = props => {
  const {
    isFocused
  } = useFocus();
  const {
    exit
  } = useApp();
  useInput(async (input, key) => {
    if (input === 'q') {
      exit();
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderColor: 'green',
    borderStyle: "single",
    height: 58,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "summer"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: props.title,
    align: "center",
    font: "tiny"
  })), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    padding: 1,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "15%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(PlaylistPage, null)), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MusicPlayer, null))), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "85%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MainView, {
    userInformation: props.userInformation
  })), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(Unknown, null)))));
};
module.exports = MainBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIk5ld2xpbmUiLCJ1c2VJbnB1dCIsInVzZUFwcCIsInVzZUZvY3VzIiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFQSSIsIkdyYWRpZW50IiwiQmlnVGV4dCIsImltcG9ydEpzeCIsIlBsYXlsaXN0UGFnZSIsIk1haW5WaWV3IiwiTXVzaWNQbGF5ZXIiLCJVbmtub3duIiwiTWFpbkJveCIsInByb3BzIiwiaXNGb2N1c2VkIiwiZXhpdCIsImlucHV0Iiwia2V5IiwidGl0bGUiLCJ1c2VySW5mb3JtYXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTWFpbkJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWluQm94LmpzXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIE5ld2xpbmUsIHVzZUlucHV0LCB1c2VBcHAsIHVzZUZvY3VzIH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoJ2luay10ZXh0LWlucHV0JykuZGVmYXVsdDtcbmNvbnN0IEFQSSA9IHJlcXVpcmUoJy4uL1Nwb3RpZnlBUEkvQVBJJyk7XG5jb25zdCBHcmFkaWVudCA9IHJlcXVpcmUoJ2luay1ncmFkaWVudCcpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoJ2luay1iaWctdGV4dCcpO1xuY29uc3QgaW1wb3J0SnN4ID0gcmVxdWlyZSgnaW1wb3J0LWpzeCcpO1xuY29uc3QgUGxheWxpc3RQYWdlID0gaW1wb3J0SnN4KCcuL1BsYXlsaXN0UGFnZScpO1xuY29uc3QgTWFpblZpZXcgPSBpbXBvcnRKc3goJy4vTWFpblZpZXcnKTtcbmNvbnN0IE11c2ljUGxheWVyID0gaW1wb3J0SnN4KCcuL011c2ljUGxheWVyJyk7XG5jb25zdCBVbmtub3duID0gaW1wb3J0SnN4KCcuL1Vua25vd24nKTtcblxuY29uc3QgTWFpbkJveCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7aXNGb2N1c2VkfSA9IHVzZUZvY3VzKCk7XG4gIGNvbnN0IHtleGl0fSA9IHVzZUFwcCgpO1xuXG4gIHVzZUlucHV0KGFzeW5jIChpbnB1dCwga2V5KSA9PiB7XG5cdCAgaWYgKGlucHV0ID09PSAncScpIHtcblx0XHQgIGV4aXQoKVxuICAgIH1cblx0fSk7XG5cbiAgcmV0dXJuIChcbiAgICBcbiAgICA8Qm94IGJvcmRlckNvbG9yPXsnZ3JlZW4nfSBib3JkZXJTdHlsZT0nc2luZ2xlJyBoZWlnaHQ9ezU4fSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICA8R3JhZGllbnQgbmFtZT1cInN1bW1lclwiPlxuICAgICAgICA8QmlnVGV4dFxuICAgICAgICAgIHRleHQ9e3Byb3BzLnRpdGxlfSBcbiAgICAgICAgICBhbGlnbj0nY2VudGVyJyBcbiAgICAgICAgICBmb250PSd0aW55J1xuICAgICAgICAvPlxuICAgICAgPC9HcmFkaWVudD5cbiAgICAgIDxCb3ggaGVpZ2h0PXtcIjEwMCVcIn0gcGFkZGluZz17MX0gZmxleERpcmVjdGlvbj0ncm93JyBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBhbGlnbkl0ZW1zPSdjZW50ZXInPlxuICAgICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjE1JVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gJ2JsYWNrJyA6ICdncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICAgIDxQbGF5bGlzdFBhZ2UgLz5cbiAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8Qm94IGJvcmRlclN0eWxlPSdzaW5nbGUnIGJvcmRlckNvbG9yPXtpc0ZvY3VzZWQgPyAnYmxhY2snIDogJ2dyZWVuJ30gaGVpZ2h0PXtcIjMwJVwifSB3aWR0aD17XCIxMDAlXCJ9PlxuICAgICAgICAgICAgPE11c2ljUGxheWVyIC8+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8Qm94IGhlaWdodD17XCIxMDAlXCJ9IHdpZHRoPXtcIjg1JVwifSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gJ2JsYWNrJyA6ICdncmVlbid9IGhlaWdodD17XCI3MCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICAgIDxNYWluVmlldyB1c2VySW5mb3JtYXRpb249e3Byb3BzLnVzZXJJbmZvcm1hdGlvbn0vPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9e2lzRm9jdXNlZCA/ICdibGFjaycgOiAnZ3JlZW4nfSBoZWlnaHQ9e1wiMzAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0+XG4gICAgICAgICAgICA8VW5rbm93biAvPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICA8L0JveD5cbiAgICAgIDwvQm94PlxuICAgIDwvQm94PlxuICApXG59XG5cbm1vZHVsZS5leHBvcnRzID0gTWFpbkJveDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQyxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsT0FBTztFQUFFQyxRQUFRO0VBQUVDLE1BQU07RUFBRUM7QUFBUyxDQUFDLEdBQUdQLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDbkUsTUFBTVEsU0FBUyxHQUFHUixPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ1MsT0FBTztBQUNuRCxNQUFNQyxH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
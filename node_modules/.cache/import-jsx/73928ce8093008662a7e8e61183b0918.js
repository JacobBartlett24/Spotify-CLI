const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline,
  useFocus
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  useEffect(async () => {
    const playlists = await axios.get('/me/playlists');
    setPlaylistData(playlists.data.items.map(playlist => /*#__PURE__*/React.createElement(Playlist, {
      playlistId: playlist.id,
      playlistName: playlist.name
    })));
  }, []);
  useEffect(() => {
    playlistData.forEach(element => {
      console.log(element);
    });
  }, [playlistData]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), /*#__PURE__*/React.createElement(Newline, null), playlistData);
};
const Playlist = props => {
  const {
    isFocused
  } = useFocus();
  return /*#__PURE__*/React.createElement(Box, {
    key: props.playlistId
  }, /*#__PURE__*/React.createElement(Text, {
    color: isFocused ? 'green' : 'white',
    bold: true
  }, props.playlistName), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwidXNlRm9jdXMiLCJCaWdUZXh0IiwiYXhpb3MiLCJQbGF5bGlzdFBhZ2UiLCJwcm9wcyIsInBsYXlsaXN0RGF0YSIsInNldFBsYXlsaXN0RGF0YSIsInBsYXlsaXN0cyIsImdldCIsImRhdGEiLCJpdGVtcyIsIm1hcCIsInBsYXlsaXN0IiwiaWQiLCJuYW1lIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiUGxheWxpc3QiLCJpc0ZvY3VzZWQiLCJwbGF5bGlzdElkIiwicGxheWxpc3ROYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBsYXlsaXN0UGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIFRleHQsIE5ld2xpbmUsIHVzZUZvY3VzIH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKCdpbmstYmlnLXRleHQnKTtcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxuXG5jb25zdCBQbGF5bGlzdFBhZ2UgPSAocHJvcHMpID0+e1xuXG4gICAgY29uc3QgW3BsYXlsaXN0RGF0YSxzZXRQbGF5bGlzdERhdGFdID0gdXNlU3RhdGUoW10pO1xuXG4gICAgdXNlRWZmZWN0KGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcGxheWxpc3RzID0gYXdhaXQgYXhpb3MuZ2V0KCcvbWUvcGxheWxpc3RzJylcblxuICAgICAgICBzZXRQbGF5bGlzdERhdGEocGxheWxpc3RzLmRhdGEuaXRlbXMubWFwKHBsYXlsaXN0ID0+XG4gICAgICAgICAgICA8UGxheWxpc3QgcGxheWxpc3RJZD17cGxheWxpc3QuaWR9IHBsYXlsaXN0TmFtZT17cGxheWxpc3QubmFtZX0vPlxuICAgICAgICApKTtcbiAgICB9LFtdKVxuICAgIFxuICAgIHVzZUVmZmVjdCgoKSA9PntcbiAgICAgICAgcGxheWxpc3REYXRhLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlbGVtZW50KVxuICAgICAgICB9KTtcbiAgICB9LCBbcGxheWxpc3REYXRhXSlcblxuICAgIHJldHVybihcbiAgICAgICAgPEJveCBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nPlxuICAgICAgICAgICAgPFRleHQ+UGxheWxpc3QgUGFnZTwvVGV4dD5cbiAgICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgICAgICB7cGxheWxpc3REYXRhfVxuICAgICAgICA8L0JveD5cbiAgICApXG59XG5cbmNvbnN0IFBsYXlsaXN0ID0gKHByb3BzKSA9PntcbiAgICBjb25zdCB7aXNGb2N1c2VkfSA9IHVzZUZvY3VzKCk7XG5cbiAgICByZXR1cm4oXG4gICAgICAgIDxCb3gga2V5PXtwcm9wcy5wbGF5bGlzdElkfT5cbiAgICAgICAgICAgIDxUZXh0IGNvbG9yPXtpc0ZvY3VzZWQgPyAnZ3JlZW4nIDogJ3doaXRlJ30gYm9sZD57cHJvcHMucGxheWxpc3ROYW1lfTwvVGV4dD5cbiAgICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5bGlzdFBhZ2U7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQyxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsSUFBSTtFQUFFQyxPQUFPO0VBQUVDO0FBQVMsQ0FBQyxHQUFHTixPQUFPLENBQUMsS0FBSyxDQUFDO0FBQ3ZELE1BQU1PLE9BQU8sR0FBR1AsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN2QyxNQUFNUSxLQUFLLEdBQUdSLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFHOUIsTUFBTVMsWUFBWSxHQUFJQyxLQUFLLElBQUk7RUFFM0IsTUFBTSxDQUFDQyxZQUFZLEVBQUNDLGVBQWUsQ0FBQyxHQUFHWCxRQUFRLENBQUMsRUFBRSxDQUFDO0VBRW5EQyxTQUFTLENBQUMsWUFBWTtJQUNsQixNQUFNVyxTQUFTLEdBQUcsTUFBTUwsS0FBSyxDQUFDTSxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRWxERixlQUFlLENBQUNDLFNBQVMsQ0FBQ0UsSUFBSSxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxpQkFDN0Msb0JBQUMsUUFBUTtNQUFDLFVBQVUsRUFBRUEsUUFBUSxDQUFDQyxFQUFHO01BQUMsWUFBWSxFQUFFRCxRQUFRLENBQUNFO0lBQUssRUFBRSxDQUNwRSxDQUFDO0VBQ04sQ0FBQyxFQUFDLEVBQUUsQ0FBQztFQUVMbEIsU0FBUyxDQUFDLE1BQUs7SUFDWFMsWUFBWSxDQUFDVSxPQUFPLENBQUNDLE9BQU8sSUFBSTtNQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE9BQU8sQ0FBQztJQUN4QixDQUFDLENBQUM7RUFDTixDQUFDLEVBQUUsQ0FBQ1gsWUFBWSxDQUFDLENBQUM7RUFFbEIsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixlQUMxQixvQkFBQyxPQUFPLE9BQUcsRUFDVkEsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVELE1BQU1jLFFBQVEsR0FBSWYsS0FBSyxJQUFJO0VBQ3ZCLE1BQU07SUFBQ2dCO0VBQVMsQ0FBQyxHQUFHcEIsUUFBUSxFQUFFO0VBRTlCLG9CQUNJLG9CQUFDLEdBQUc7SUFBQyxHQUFHLEVBQUVJLEtBQUssQ0FBQ2lCO0VBQVcsZ0JBQ3ZCLG9CQUFDLElBQUk7SUFBQyxLQUFLLEVBQUVELFNBQVMsR0FBRyxPQUFPLEdBQUcsT0FBUTtJQUFDLElBQUk7RUFBQSxHQUFFaEIsS0FBSyxDQUFDa0IsWUFBWSxDQUFRLGVBQzVFLG9CQUFDLE9BQU8sT0FBRyxDQUNUO0FBRWQsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR3JCLFlBQVkifQ==
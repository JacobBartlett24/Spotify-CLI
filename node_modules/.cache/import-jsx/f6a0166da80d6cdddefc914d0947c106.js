// Table.js

const React = require('react');
const {
  useState,
  useEffect
} = React;
// Destructuring useState and useEffect from React

const {
  Box,
  Text,
  Newline
} = require('ink');
// Destructuring the components we need from ink

// Fetching mock data

const Table = () => {
  const [data, setData] = useState([]);
  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    padding: 2,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "COIN")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "PRICE (USD)")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "24 HOUR CHANGE")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "ALL TIME HIGH"))), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = Table;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiVGFibGUiLCJkYXRhIiwic2V0RGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUYWJsZS5qc1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gUmVhY3Q7XG4vLyBEZXN0cnVjdHVyaW5nIHVzZVN0YXRlIGFuZCB1c2VFZmZlY3QgZnJvbSBSZWFjdFxuXG5jb25zdCB7IEJveCwgVGV4dCwgTmV3bGluZSB9ID0gcmVxdWlyZSgnaW5rJyk7XG4vLyBEZXN0cnVjdHVyaW5nIHRoZSBjb21wb25lbnRzIHdlIG5lZWQgZnJvbSBpbmtcblxuLy8gRmV0Y2hpbmcgbW9jayBkYXRhXG5cbmNvbnN0IFRhYmxlID0gKCkgPT4ge1xuXG4gICAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoW10pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBwYWRkaW5nPXsyfSBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nPlxuICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPScyNSUnPjxUZXh0PkNPSU48L1RleHQ+PC9Cb3g+XG4gICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD5QUklDRSAoVVNEKTwvVGV4dD48L0JveD5cbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPScyNSUnPjxUZXh0PjI0IEhPVVIgQ0hBTkdFPC9UZXh0PjwvQm94PlxuICAgICAgICAgICAgICAgIDxCb3ggd2lkdGg9JzI1JSc+PFRleHQ+QUxMIFRJTUUgSElHSDwvVGV4dD48L0JveD5cbiAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgPE5ld2xpbmUvPlxuICAgICAgICA8L0JveD5cbiAgICApXG59XG5cbm1vZHVsZS5leHBvcnRzID0gVGFibGU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFFOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDOztBQUVBLE1BQU07RUFBRUksR0FBRztFQUFFQyxJQUFJO0VBQUVDO0FBQVEsQ0FBQyxHQUFHTCxPQUFPLENBQUMsS0FBSyxDQUFDO0FBQzdDOztBQUVBOztBQUVBLE1BQU1NLEtBQUssR0FBRyxNQUFNO0VBRWhCLE1BQU0sQ0FBQ0MsSUFBSSxFQUFFQyxPQUFPLENBQUMsR0FBR1AsUUFBUSxDQUFDLEVBQUUsQ0FBQztFQUVwQyxvQkFDSSxvQkFBQyxHQUFHO0lBQUMsV0FBVyxFQUFDLFFBQVE7SUFBQyxPQUFPLEVBQUUsQ0FBRTtJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN4RCxvQkFBQyxHQUFHLHFCQUNBLG9CQUFDLEdBQUc7SUFBQyxLQUFLLEVBQUM7RUFBSyxnQkFBQyxvQkFBQyxJQUFJLGVBQVksQ0FBTSxlQUN4QyxvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQUMsb0JBQUMsSUFBSSxzQkFBbUIsQ0FBTSxlQUMvQyxvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQUMsb0JBQUMsSUFBSSx5QkFBc0IsQ0FBTSxlQUNsRCxvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQUMsb0JBQUMsSUFBSSx3QkFBcUIsQ0FBTSxDQUMvQyxlQUNOLG9CQUFDLE9BQU8sT0FBRSxDQUNSO0FBRWQsQ0FBQztBQUVEUSxNQUFNLENBQUNDLE9BQU8sR0FBR0osS0FBSyJ9
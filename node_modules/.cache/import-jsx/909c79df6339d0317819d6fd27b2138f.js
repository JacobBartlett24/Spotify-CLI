// MainBox.js
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Newline,
  useInput,
  useApp
} = require('ink');
const TextInput = require('ink-text-input').default;
const API = require('../SpotifyAPI/API');
const Gradient = require('ink-gradient');
const BigText = require('ink-big-text');
const importJsx = require('import-jsx');
const PlaylistPage = importJsx('./PlaylistPage');
const MainView = importJsx('./MainView');
const MusicPlayer = importJsx('./MusicPlayer');
const Unknown = importJsx('./Unknown');
const MainBox = props => {
  const {
    isFocused
  } = useFocus();
  const {
    exit
  } = useApp();
  useInput(async (input, key) => {
    if (input === 'q') {
      exit();
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderColor: 'green',
    borderStyle: "single",
    height: 58,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "summer"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: props.title,
    align: "center",
    font: "tiny"
  })), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    padding: 1,
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "15%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(PlaylistPage, null)), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MusicPlayer, null))), /*#__PURE__*/React.createElement(Box, {
    height: "100%",
    width: "85%",
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "70%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(MainView, {
    userInformation: props.userInformation
  })), /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    borderColor: isFocused ? 'black' : 'green',
    height: "30%",
    width: "100%"
  }, /*#__PURE__*/React.createElement(Unknown, null)))));
};
module.exports = MainBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIk5ld2xpbmUiLCJ1c2VJbnB1dCIsInVzZUFwcCIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJBUEkiLCJHcmFkaWVudCIsIkJpZ1RleHQiLCJpbXBvcnRKc3giLCJQbGF5bGlzdFBhZ2UiLCJNYWluVmlldyIsIk11c2ljUGxheWVyIiwiVW5rbm93biIsIk1haW5Cb3giLCJwcm9wcyIsImlzRm9jdXNlZCIsInVzZUZvY3VzIiwiZXhpdCIsImlucHV0Iiwia2V5IiwidGl0bGUiLCJ1c2VySW5mb3JtYXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTWFpbkJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYWluQm94LmpzXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xuY29uc3QgeyBCb3gsIE5ld2xpbmUsIHVzZUlucHV0LCB1c2VBcHAgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgQVBJID0gcmVxdWlyZSgnLi4vU3BvdGlmeUFQSS9BUEknKTtcbmNvbnN0IEdyYWRpZW50ID0gcmVxdWlyZSgnaW5rLWdyYWRpZW50Jyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBpbXBvcnRKc3ggPSByZXF1aXJlKCdpbXBvcnQtanN4Jyk7XG5jb25zdCBQbGF5bGlzdFBhZ2UgPSBpbXBvcnRKc3goJy4vUGxheWxpc3RQYWdlJyk7XG5jb25zdCBNYWluVmlldyA9IGltcG9ydEpzeCgnLi9NYWluVmlldycpO1xuY29uc3QgTXVzaWNQbGF5ZXIgPSBpbXBvcnRKc3goJy4vTXVzaWNQbGF5ZXInKTtcbmNvbnN0IFVua25vd24gPSBpbXBvcnRKc3goJy4vVW5rbm93bicpO1xuXG5jb25zdCBNYWluQm94ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtpc0ZvY3VzZWR9ID0gdXNlRm9jdXMoKTtcbiAgY29uc3Qge2V4aXR9ID0gdXNlQXBwKCk7XG5cbiAgdXNlSW5wdXQoYXN5bmMgKGlucHV0LCBrZXkpID0+IHtcblx0ICBpZiAoaW5wdXQgPT09ICdxJykge1xuXHRcdCAgZXhpdCgpXG4gICAgfVxuXHR9KTtcblxuICByZXR1cm4gKFxuICAgIFxuICAgIDxCb3ggYm9yZGVyQ29sb3I9eydncmVlbid9IGJvcmRlclN0eWxlPSdzaW5nbGUnIGhlaWdodD17NTh9IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgICAgIDxHcmFkaWVudCBuYW1lPVwic3VtbWVyXCI+XG4gICAgICAgIDxCaWdUZXh0XG4gICAgICAgICAgdGV4dD17cHJvcHMudGl0bGV9IFxuICAgICAgICAgIGFsaWduPSdjZW50ZXInIFxuICAgICAgICAgIGZvbnQ9J3RpbnknXG4gICAgICAgIC8+XG4gICAgICA8L0dyYWRpZW50PlxuICAgICAgPEJveCBoZWlnaHQ9e1wiMTAwJVwifSBwYWRkaW5nPXsxfSBmbGV4RGlyZWN0aW9uPSdyb3cnIGp1c3RpZnlDb250ZW50PSdjZW50ZXInIGFsaWduSXRlbXM9J2NlbnRlcic+XG4gICAgICAgIDxCb3ggaGVpZ2h0PXtcIjEwMCVcIn0gd2lkdGg9e1wiMTUlXCJ9IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgICAgICAgICA8Qm94IGJvcmRlclN0eWxlPSdzaW5nbGUnIGJvcmRlckNvbG9yPXtpc0ZvY3VzZWQgPyAnYmxhY2snIDogJ2dyZWVuJ30gaGVpZ2h0PXtcIjcwJVwifSB3aWR0aD17XCIxMDAlXCJ9PlxuICAgICAgICAgICAgPFBsYXlsaXN0UGFnZSAvPlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxCb3ggYm9yZGVyU3R5bGU9J3NpbmdsZScgYm9yZGVyQ29sb3I9e2lzRm9jdXNlZCA/ICdibGFjaycgOiAnZ3JlZW4nfSBoZWlnaHQ9e1wiMzAlXCJ9IHdpZHRoPXtcIjEwMCVcIn0+XG4gICAgICAgICAgICA8TXVzaWNQbGF5ZXIgLz5cbiAgICAgICAgICA8L0JveD5cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxCb3ggaGVpZ2h0PXtcIjEwMCVcIn0gd2lkdGg9e1wiODUlXCJ9IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgICAgICAgICA8Qm94IGJvcmRlclN0eWxlPSdzaW5nbGUnIGJvcmRlckNvbG9yPXtpc0ZvY3VzZWQgPyAnYmxhY2snIDogJ2dyZWVuJ30gaGVpZ2h0PXtcIjcwJVwifSB3aWR0aD17XCIxMDAlXCJ9PlxuICAgICAgICAgICAgPE1haW5WaWV3IHVzZXJJbmZvcm1hdGlvbj17cHJvcHMudXNlckluZm9ybWF0aW9ufS8+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gJ2JsYWNrJyA6ICdncmVlbid9IGhlaWdodD17XCIzMCVcIn0gd2lkdGg9e1wiMTAwJVwifT5cbiAgICAgICAgICAgIDxVbmtub3duIC8+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9Cb3g+XG4gICAgPC9Cb3g+XG4gIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNYWluQm94OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDLE1BQU07RUFBRUksR0FBRztFQUFFQyxPQUFPO0VBQUVDLFFBQVE7RUFBRUM7QUFBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDekQsTUFBTU8sU0FBUyxHQUFHUCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ1EsT0FBTztBQUNuRCxNQUFNQyxHQUFHLEdBQUdULE9BQU8sQ0FBQyxt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
const React = require('react');
const {
  useState,
  useEffect
} = React;
const {
  Box,
  Text,
  Newline,
  useFocus
} = require('ink');
const BigText = require('ink-big-text');
const axios = require('axios');
const PlaylistPage = props => {
  const [playlistData, setPlaylistData] = useState([]);
  useEffect(async () => {
    const playlists = await axios.get('/me/playlists');
    setPlaylistData(playlists.data.items.map(playlist => /*#__PURE__*/React.createElement(Playlist, {
      key: props.playlistId,
      playlistName: playlist.name
    })));
  }, []);
  useEffect(() => {
    playlistData.forEach(element => {
      console.log(element);
    });
  }, [playlistData]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Playlist Page"), /*#__PURE__*/React.createElement(Newline, null), playlistData);
};
const Playlist = props => {
  const {
    isFocused
  } = useFocus();
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, {
    color: isFocused ? 'green' : 'white',
    bold: true
  }, props.playlistName), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = PlaylistPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwidXNlRm9jdXMiLCJCaWdUZXh0IiwiYXhpb3MiLCJQbGF5bGlzdFBhZ2UiLCJwcm9wcyIsInBsYXlsaXN0RGF0YSIsInNldFBsYXlsaXN0RGF0YSIsInBsYXlsaXN0cyIsImdldCIsImRhdGEiLCJpdGVtcyIsIm1hcCIsInBsYXlsaXN0IiwicGxheWxpc3RJZCIsIm5hbWUiLCJmb3JFYWNoIiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJQbGF5bGlzdCIsImlzRm9jdXNlZCIsInBsYXlsaXN0TmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJQbGF5bGlzdFBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcbmNvbnN0IHsgQm94LCBUZXh0LCBOZXdsaW5lLCB1c2VGb2N1cyB9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZSgnaW5rLWJpZy10ZXh0Jyk7XG5jb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cblxuY29uc3QgUGxheWxpc3RQYWdlID0gKHByb3BzKSA9PntcblxuICAgIGNvbnN0IFtwbGF5bGlzdERhdGEsc2V0UGxheWxpc3REYXRhXSA9IHVzZVN0YXRlKFtdKTtcblxuICAgIHVzZUVmZmVjdChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBsYXlsaXN0cyA9IGF3YWl0IGF4aW9zLmdldCgnL21lL3BsYXlsaXN0cycpXG5cbiAgICAgICAgc2V0UGxheWxpc3REYXRhKHBsYXlsaXN0cy5kYXRhLml0ZW1zLm1hcChwbGF5bGlzdCA9PlxuICAgICAgICAgICAgPFBsYXlsaXN0IGtleT17cHJvcHMucGxheWxpc3RJZH0gcGxheWxpc3ROYW1lPXtwbGF5bGlzdC5uYW1lfS8+XG4gICAgICAgICkpO1xuICAgIH0sW10pXG4gICAgXG4gICAgdXNlRWZmZWN0KCgpID0+e1xuICAgICAgICBwbGF5bGlzdERhdGEuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVsZW1lbnQpXG4gICAgICAgIH0pO1xuICAgIH0sIFtwbGF5bGlzdERhdGFdKVxuXG4gICAgcmV0dXJuKFxuICAgICAgICA8Qm94IGZsZXhEaXJlY3Rpb249J2NvbHVtbic+XG4gICAgICAgICAgICA8VGV4dD5QbGF5bGlzdCBQYWdlPC9UZXh0PlxuICAgICAgICAgICAgPE5ld2xpbmUgLz5cbiAgICAgICAgICAgIHtwbGF5bGlzdERhdGF9XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxuY29uc3QgUGxheWxpc3QgPSAocHJvcHMpID0+e1xuICAgIGNvbnN0IHtpc0ZvY3VzZWR9ID0gdXNlRm9jdXMoKTtcblxuICAgIHJldHVybihcbiAgICAgICAgPEJveD5cbiAgICAgICAgICAgIDxUZXh0IGNvbG9yPXtpc0ZvY3VzZWQgPyAnZ3JlZW4nIDogJ3doaXRlJ30gYm9sZD57cHJvcHMucGxheWxpc3ROYW1lfTwvVGV4dD5cbiAgICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgIDwvQm94PlxuICAgIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5bGlzdFBhZ2U7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQyxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsSUFBSTtFQUFFQyxPQUFPO0VBQUVDO0FBQVMsQ0FBQyxHQUFHTixPQUFPLENBQUMsS0FBSyxDQUFDO0FBQ3ZELE1BQU1PLE9BQU8sR0FBR1AsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN2QyxNQUFNUSxLQUFLLEdBQUdSLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFHOUIsTUFBTVMsWUFBWSxHQUFJQyxLQUFLLElBQUk7RUFFM0IsTUFBTSxDQUFDQyxZQUFZLEVBQUNDLGVBQWUsQ0FBQyxHQUFHWCxRQUFRLENBQUMsRUFBRSxDQUFDO0VBRW5EQyxTQUFTLENBQUMsWUFBWTtJQUNsQixNQUFNVyxTQUFTLEdBQUcsTUFBTUwsS0FBSyxDQUFDTSxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRWxERixlQUFlLENBQUNDLFNBQVMsQ0FBQ0UsSUFBSSxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxpQkFDN0Msb0JBQUMsUUFBUTtNQUFDLEdBQUcsRUFBRVIsS0FBSyxDQUFDUyxVQUFXO01BQUMsWUFBWSxFQUFFRCxRQUFRLENBQUNFO0lBQUssRUFBRSxDQUNsRSxDQUFDO0VBQ04sQ0FBQyxFQUFDLEVBQUUsQ0FBQztFQUVMbEIsU0FBUyxDQUFDLE1BQUs7SUFDWFMsWUFBWSxDQUFDVSxPQUFPLENBQUNDLE9BQU8sSUFBSTtNQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLE9BQU8sQ0FBQztJQUN4QixDQUFDLENBQUM7RUFDTixDQUFDLEVBQUUsQ0FBQ1gsWUFBWSxDQUFDLENBQUM7RUFFbEIsb0JBQ0ksb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFRLGdCQUN2QixvQkFBQyxJQUFJLHdCQUFxQixlQUMxQixvQkFBQyxPQUFPLE9BQUcsRUFDVkEsWUFBWSxDQUNYO0FBRWQsQ0FBQztBQUVELE1BQU1jLFFBQVEsR0FBSWYsS0FBSyxJQUFJO0VBQ3ZCLE1BQU07SUFBQ2dCO0VBQVMsQ0FBQyxHQUFHcEIsUUFBUSxFQUFFO0VBRTlCLG9CQUNJLG9CQUFDLEdBQUcscUJBQ0Esb0JBQUMsSUFBSTtJQUFDLEtBQUssRUFBRW9CLFNBQVMsR0FBRyxPQUFPLEdBQUcsT0FBUTtJQUFDLElBQUk7RUFBQSxHQUFFaEIsS0FBSyxDQUFDaUIsWUFBWSxDQUFRLGVBQzVFLG9CQUFDLE9BQU8sT0FBRyxDQUNUO0FBRWQsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR3BCLFlBQVkifQ==